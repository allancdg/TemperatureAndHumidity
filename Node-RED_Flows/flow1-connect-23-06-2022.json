[
    {
        "id": "02720ec3e6116be1",
        "type": "tab",
        "label": "Flow 1 - Connect",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7d4b428e61805de7",
        "type": "mqtt in",
        "z": "02720ec3e6116be1",
        "name": "/connect/userID",
        "topic": "/connect/userID",
        "qos": "2",
        "datatype": "auto",
        "broker": "cd591e8b8c4ed71c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "873e402a5876491c"
            ]
        ]
    },
    {
        "id": "55de71e4cd57303e",
        "type": "mqtt out",
        "z": "02720ec3e6116be1",
        "name": "adafruit/temperatura",
        "topic": "Pudimi/feeds/temperatura",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "09126019498dc839",
        "x": 900,
        "y": 700,
        "wires": []
    },
    {
        "id": "873e402a5876491c",
        "type": "function",
        "z": "02720ec3e6116be1",
        "name": "PushUserID",
        "func": "let uidList = flow.get('uidList');\nlet uid = msg.payload;\n\nif (!uidList.includes(uid)){\n    uidList.push(uid);\n    flow.set('uidList', uidList);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 160,
        "wires": [
            [
                "e501df67770a588a"
            ]
        ]
    },
    {
        "id": "e0d2890a8ac4ee29",
        "type": "debug",
        "z": "02720ec3e6116be1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 240,
        "wires": []
    },
    {
        "id": "5a4589ed61b99355",
        "type": "mqtt in",
        "z": "02720ec3e6116be1",
        "name": "/connect/reply",
        "topic": "/connect/reply",
        "qos": "2",
        "datatype": "auto",
        "broker": "cd591e8b8c4ed71c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 850,
        "y": 240,
        "wires": [
            [
                "e0d2890a8ac4ee29"
            ]
        ]
    },
    {
        "id": "e501df67770a588a",
        "type": "mqtt out",
        "z": "02720ec3e6116be1",
        "name": "/connect/replyTo",
        "topic": "/connect/replyTo",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cd591e8b8c4ed71c",
        "x": 640,
        "y": 160,
        "wires": []
    },
    {
        "id": "5db97a3edcf399c2",
        "type": "mqtt in",
        "z": "02720ec3e6116be1",
        "name": "/connect/isUserConnected",
        "topic": "/connect/isUserConnected",
        "qos": "2",
        "datatype": "auto",
        "broker": "cd591e8b8c4ed71c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 240,
        "wires": [
            [
                "aab81ec7b0e86b1b"
            ]
        ]
    },
    {
        "id": "aab81ec7b0e86b1b",
        "type": "function",
        "z": "02720ec3e6116be1",
        "name": "IsUserConnected",
        "func": "let uidList = flow.get('uidList');\nlet uid = msg.payload;\nlet ret;\n\nif (uidList.includes(uid)){\n    ret = uid+\" is connected\";\n} else {\n    ret = uid+\" is not connected\";\n}\n\nmsg.payload = ret;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 240,
        "wires": [
            [
                "25201b9471b9f7db"
            ]
        ]
    },
    {
        "id": "25201b9471b9f7db",
        "type": "mqtt out",
        "z": "02720ec3e6116be1",
        "name": "/connect/reply",
        "topic": "/connect/reply",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cd591e8b8c4ed71c",
        "x": 640,
        "y": 240,
        "wires": []
    },
    {
        "id": "8eec70f038d74581",
        "type": "mqtt in",
        "z": "02720ec3e6116be1",
        "name": "/connect/replyTo",
        "topic": "/connect/replyTo",
        "qos": "2",
        "datatype": "auto",
        "broker": "cd591e8b8c4ed71c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 860,
        "y": 160,
        "wires": [
            [
                "20ff611a0b8d35fb"
            ]
        ]
    },
    {
        "id": "20ff611a0b8d35fb",
        "type": "debug",
        "z": "02720ec3e6116be1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 160,
        "wires": []
    },
    {
        "id": "c2592f2199b624f6",
        "type": "function",
        "z": "02720ec3e6116be1",
        "name": "Create Variables",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"uidList\", []);\nflow.set(\"aliveList\", []);\nflow.set(\"toDieList\", []);",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f95d22c02c2ca1cf",
        "type": "inject",
        "z": "02720ec3e6116be1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 700,
        "y": 640,
        "wires": [
            [
                "e170854edd9a6238"
            ]
        ]
    },
    {
        "id": "e170854edd9a6238",
        "type": "change",
        "z": "02720ec3e6116be1",
        "name": "test",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "uidList",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 640,
        "wires": [
            [
                "72e76d690e13c58c"
            ]
        ]
    },
    {
        "id": "72e76d690e13c58c",
        "type": "debug",
        "z": "02720ec3e6116be1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 640,
        "wires": []
    },
    {
        "id": "71ea73d706bbd101",
        "type": "inject",
        "z": "02720ec3e6116be1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 40,
        "wires": [
            [
                "c2592f2199b624f6"
            ]
        ]
    },
    {
        "id": "41d5daf93c04d319",
        "type": "inject",
        "z": "02720ec3e6116be1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "5fbd0619a5d817c4"
            ]
        ]
    },
    {
        "id": "5fbd0619a5d817c4",
        "type": "function",
        "z": "02720ec3e6116be1",
        "name": "keepAliveRequest",
        "func": "let uidList = flow.get('uidList');\nlet toDieList = flow.get('toDieList');\nlet msgList = [];\n\nif (uidList.length <= 0){\n    msg.payload = \"i see dead people\";\n    return msg;\n}\n\n\nfor (var i = uidList.length -1; i >= 0; i--) {\n    let uid = uidList[i];\n    \n    if (!toDieList.includes(uid)){\n        toDieList.push(uid);\n        msgList.push({payload: uid + \" is set to die\"});\n    } else {\n        uidList.splice(i, 1);\n        msgList.push({payload: uid + \" is dead\"});\n    }\n}\n\nflow.set('toDieList', toDieList);\nflow.set('uidList', uidList);\n\nreturn [msgList];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 380,
        "wires": [
            [
                "2d0ebcf43a045dc2"
            ]
        ]
    },
    {
        "id": "2d0ebcf43a045dc2",
        "type": "mqtt out",
        "z": "02720ec3e6116be1",
        "name": "/connect/keepAlive",
        "topic": "/connect/keepAlive",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cd591e8b8c4ed71c",
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "5606168da2073ff3",
        "type": "mqtt in",
        "z": "02720ec3e6116be1",
        "name": "/connect/imAlive",
        "topic": "/connect/imAlive",
        "qos": "2",
        "datatype": "auto",
        "broker": "cd591e8b8c4ed71c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 460,
        "wires": [
            [
                "3cec6c6b0c747759"
            ]
        ]
    },
    {
        "id": "88cd0c73f8210639",
        "type": "mqtt in",
        "z": "02720ec3e6116be1",
        "name": "/connect/keepAlive",
        "topic": "/connect/keepAlive",
        "qos": "2",
        "datatype": "auto",
        "broker": "cd591e8b8c4ed71c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 830,
        "y": 380,
        "wires": [
            [
                "3efb3091e1301365"
            ]
        ]
    },
    {
        "id": "3efb3091e1301365",
        "type": "debug",
        "z": "02720ec3e6116be1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 380,
        "wires": []
    },
    {
        "id": "3cec6c6b0c747759",
        "type": "function",
        "z": "02720ec3e6116be1",
        "name": "keepAliveResponse",
        "func": "let uidList = flow.get('uidList');\nlet toDieList = flow.get('toDieList');\n\nlet uid = msg.payload;\n\nif (toDieList.length > 0) {\n    \n    if (toDieList.includes(uid)){\n        const index = toDieList.indexOf(uid);\n        if (index > -1) {\n          toDieList.splice(index, 1); // 2nd parameter means remove one item only\n        }\n        flow.set('toDieList', toDieList);\n        msg.payload = uid + ' has avoided death';\n        \n    } else {\n        msg.payload = uid + \" is not set to die\";\n    }\n    \n} else {\n    \n    msg.payload = \"everyone is alive\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 460,
        "wires": [
            [
                "c3e6e3676e8682b3"
            ]
        ]
    },
    {
        "id": "c3e6e3676e8682b3",
        "type": "debug",
        "z": "02720ec3e6116be1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 460,
        "wires": []
    },
    {
        "id": "cd591e8b8c4ed71c",
        "type": "mqtt-broker",
        "name": "raspberry-mqtt-broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "09126019498dc839",
        "type": "mqtt-broker",
        "name": "",
        "broker": "io.adafruit.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    }
]